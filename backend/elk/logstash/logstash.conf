input { 
    jdbc {
        jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my-db:3306/test_db"
        jdbc_user => "root"
        jdbc_password => "0000"
        schedule => "* * * * *"
        use_column_value => true
        tracking_column => "updatedat"
        last_run_metadata_path => "./aaa.txt"
        tracking_column_type => "numeric"
        statement => "select id, title, contents, name, createdat,unix_timestamp(updatedat) as updatedat from qt_board 
        where unix_timestamp(updatedat) > :sql_last_value order by updatedat asc"
        type =>"qtboard"
    }
    jdbc {
        jdbc_driver_library =>"/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my-db:3306/test_db"
        jdbc_user => "root"
        jdbc_password => "0000"
        schedule => "* * * * *"
        use_column_value => true
        tracking_column => "updatedat"
        tracking_column_type => "numeric"
        statement => "select info.id, user.name, user.role, companyname , department ,selfintro, mentostatus, info.createdat, unix_timestamp(user.updatedat) as updatedat
        from mento_info as info left join user ON user.mentorId = info.id 
        where unix_timestamp(user.updatedat) > :sql_last_value order by updatedat asc"    
        type => "mentor"
    }
    jdbc {
        jdbc_driver_library =>"/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my-db:3306/test_db"
        jdbc_user => "root"
        jdbc_password => "0000"
        schedule => "* * * * *"
        use_column_value => true
        tracking_column => "updatedat"
        last_run_metadata_path => "./aaa.txt"
        tracking_column_type => "numeric"
        statement => "select lp.id, lp.classtitle, lp.classdescription, lp.rating, user.name, info.companyname, info.department, lp.createdat, unix_timestamp(lp.updatedat) as updatedat from lecture_product as lp
        left join mento_info as info ON info.id = lp.mentorId
        left join user ON user.mentorId = info.id 
        where unix_timestamp(lp.updatedat) > :sql_last_value order by updatedat asc"
        type =>"lecture"
    }
}

output { # Elastic search로 내보내기 
    if [type] == "qtboard" {
        elasticsearch{
            hosts => "elasticsearch:9200"
            index => "qtboard"
            manage_template => true 
            template_name => "qtboard"
            document_id => "%{id}"
            template => "/_templates/qtboard/custom_template.json"
            template_overwrite => true
        }
        stdout { codec => rubydebug }
    }   else if [type] == "mentor" {
            elasticsearch{
                hosts => "elasticsearch:9200"
                index => "mentor"
                document_id => "%{id}"
                manage_template => true 
                template_name => "mentor"
                template => "/_templates/mentor/mentor_template.json"
                template_overwrite => true
            }
            stdout { codec => rubydebug }

    }   else if [type] == "lecture" {
            elasticsearch{
                hosts => "elasticsearch:9200"
                index => "lecture"
                document_id => "%{id}"
                manage_template => true 
                template_name => "lecture"
                template => "/_templates/lecture/lecture_template.json"
                template_overwrite => true
            }
            stdout { codec => rubydebug }
    }
}