input { 
    jdbc {
        jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my_db:3306/test_db"
        jdbc_user => "root"
        jdbc_password => "0000"
        schedule => "* * * * *"
        use_column_value => true
        tracking_column => "updatedat"
        last_run_metadata_path => "./aaa.txt"
        tracking_column_type => "numeric"
        statement => "select id, title, contents, name, unix_timestamp(updatedat) as updatedat from qt_board where unix_timestamp(updatedat) > :sql_last_value order by updatedat asc"
        type =>"qtboard"
    }
    jdbc {
        jdbc_driver_library =>"/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my_db:3306/test_db"
        jdbc_user => "root"
        jdbc_password => "0000"
        schedule => "* * * * *"
        use_column_value => true
        tracking_column => "updatedat"
        tracking_column_type => "numeric"
        statement => "select info.id, user.name, user.role, companyName , department ,selfintro, mentostatus, info.createdat, categoryname, unix_timestamp(info.updatedat) as updatedat
        from mento_info as info left join `user` ON user.mentorId = info.id 
        LEFT JOIN join_mento_and_product_category as cate ON cate.mentoId = info.id 
        LEFT JOIN lecture_product_category as lpc ON cate.categoryId = lpc.id 
        where unix_timestamp(info.updatedat) > :sql_last_value order by updatedat asc"    
        type => "mentor"
    }
    jdbc {
        jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my_db:3306/test_db"
        jdbc_user => "root"
        jdbc_password => "0000"
        schedule => "* * * * *"
        use_column_value => true
        tracking_column => "updatedat"
        last_run_metadata_path => "./aaa.txt"
        tracking_column_type => "numeric"
        statement => "select id, title, contents, name, unix_timestamp(updatedat) as updatedat from qt_board where unix_timestamp(updatedat) > :sql_last_value order by updatedat asc"
        type =>"lecture"
    }
}

filter {
    mutate  {
        remove_field => ["@timestamp", "@version"]
    }
}

output { # Elastic search로 내보내기 
    if "qtboard" in [type] {
        elasticsearch{
            hosts => "elasticsearch:9200"
            index => "qtboard"
            manage_template => true 
            template_name => "qtboard"
            template => "/_templates/custom_template.json"
            template_overwrite => true
            
        }
        stdout { codec => rubydebug }
    }    else if "mentor" in [type] {
        elasticsearch{
            hosts => "elasticsearch:9200"
            index => "mentor*"
            manage_template => true 
            template_name => "mentor"
            template => "/_templates/custom_template.json"
            template_overwrite => true
        }
        stdout { codec => rubydebug }
    }
}